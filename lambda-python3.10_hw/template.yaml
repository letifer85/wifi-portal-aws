AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Old Square Bar WiFi-Portal Application

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 20

Resources:
  DynamoClientTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "ClientTable"
      AttributeDefinitions: 
        - 
          AttributeName: "phone_number"
          AttributeType: "S"
      KeySchema: 
        - 
          AttributeName: "phone_number"
          KeyType: "HASH"
      ProvisionedThroughput: 
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
    DependsOn: 
      - IAMRole

  DefaultFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Layers:
        - !Sub "arn:aws:lambda:eu-central-1:580247275435:layer:LambdaInsightsExtension:38"
      CodeUri: src/
      Handler: app.root
      Runtime: python3.10
      Architectures:
        - x86_64
      Events:
        root:
          Type: Api
          Properties:
            Path: /guest/s/default
            Method: get
        auth:
          Type: Api
          Properties:
            Path: /auth
            Method: get
        authCallback:
          Type: Api
          Properties:
            Path: /auth/callback
            Method: get
      Role: !GetAtt IAMRole.Arn
    DependsOn:
      - DynamoClientTable

  IAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: Policy_api-lambda-db
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'dynamodb:BatchGetItem'
                  - 'dynamodb:BatchWriteItem'
                  - 'dynamodb:TagResource'
                  - 'dynamodb:UntagResource'
                  - 'dynamodb:PutItem'
                  - 'dynamodb:DeleteItem'
                  - 'dynamodb:GetItem'
                  - 'dynamodb:Scan'
                  - 'dynamodb:Query'
                  - 'dynamodb:UpdateItem'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:CreateLogGroup'
                  - 'logs:PutLogEvents'
                Resource: '*'

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  Api:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  DynamoClientTable:
    Description: "DynamoClientTable created"
    Value: !GetAtt DynamoClientTable.Arn
  DefaultFunction:
    Description: "Default Lambda Function ARN"
    Value: !GetAtt DefaultFunction.Arn
  IAMRole:
    Description: "IAM Role created for Default function, with full dynamo access"
    Value: !GetAtt IAMRole.Arn
